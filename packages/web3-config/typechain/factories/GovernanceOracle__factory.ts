/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GovernanceOracle,
  GovernanceOracleInterface,
} from "../GovernanceOracle";

const _abi = [
  {
    inputs: [],
    name: "ancillaryData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callbackError",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_ancillaryData",
        type: "bytes",
      },
      {
        internalType: "int256",
        name: "price",
        type: "int256",
      },
    ],
    name: "priceSettled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestGovernanceCheck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260008060006101000a81548160ff02191690831515021790555060008060016101000a81548160ff0219169083151502179055506040518060600160405280602981526020016200127560299139600190805190602001906200006992919062000159565b506040518060a00160405280606581526020016200114460659139600290805190602001906200009b92919062000159565b506040518060400160405280601781526020017f206f662074686520766f74657320617265205945533f2c00000000000000000081525060039080519060200190620000e992919062000159565b5060405180610100016040528060cc8152602001620011a960cc9139600490805190602001906200011c929190620001ea565b507f5945535f4f525f4e4f5f51554552590000000000000000000000000000000000600555426006553480156200015257600080fd5b50620002ff565b82805462000167906200029a565b90600052602060002090601f0160209004810192826200018b5760008555620001d7565b82601f10620001a657805160ff1916838001178555620001d7565b82800160010185558215620001d7579182015b82811115620001d6578251825591602001919060010190620001b9565b5b509050620001e691906200027b565b5090565b828054620001f8906200029a565b90600052602060002090601f0160209004810192826200021c576000855562000268565b82601f106200023757805160ff191683800117855562000268565b8280016001018555821562000268579182015b82811115620002675782518255916020019190600101906200024a565b5b5090506200027791906200027b565b5090565b5b80821115620002965760008160009055506001016200027c565b5090565b60006002820490506001821680620002b357607f821691505b60208210811415620002ca57620002c9620002d0565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b610e35806200030f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806304cc1fd51461005c5780636559905714610078578063661a4f5314610096578063e3389f09146100b4578063f2f1f22f146100be575b600080fd5b61007660048036038101906100719190610629565b6100dc565b005b61008061028f565b60405161008d91906109e9565b60405180910390f35b61009e61031d565b6040516100ab9190610928565b60405180910390f35b6100bc610330565b005b6100c6610471565b6040516100d39190610928565b60405180910390f35b60006100e6610482565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d90610a44565b60405180910390fd5b600654841461019a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019190610a0b565b60405180910390fd5b60055485146101de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d590610a84565b60405180910390fd5b828051906020012060046040516101f59190610911565b60405180910390201461023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610a64565b60405180910390fd5b670de0b6b3a764000082141561026c5760016000806101000a81548160ff021916908315150217905550610288565b6001600060016101000a81548160ff0219169083151502179055505b5050505050565b6004805461029c90610c2d565b80601f01602080910402602001604051908101604052809291908181526020018280546102c890610c2d565b80156103155780601f106102ea57610100808354040283529160200191610315565b820191906000526020600020905b8154815290600101906020018083116102f857829003601f168201915b505050505081565b600060019054906101000a900460ff1681565b600061033a610482565b9050600073bf7a7169562078c96f0ec1a8afd6ae50f12e5a9990508173ffffffffffffffffffffffffffffffffffffffff166311df92f1600554600654600485670de0b6b3a76400006040518663ffffffff1660e01b81526004016103a3959493929190610943565b602060405180830381600087803b1580156103bd57600080fd5b505af11580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f591906106a4565b508173ffffffffffffffffffffffffffffffffffffffff1663473c45fe600554600654600460786040518563ffffffff1660e01b815260040161043b949392919061099d565b600060405180830381600087803b15801561045557600080fd5b505af1158015610469573d6000803e3d6000fd5b505050505050565b60008054906101000a900460ff1681565b60008073ed0169a88d267063184b0853baaaae66c3c154b2905060008190508073ffffffffffffffffffffffffffffffffffffffff1663aafd5e406040518163ffffffff1660e01b81526004016104d890610a2b565b60206040518083038186803b1580156104f057600080fd5b505afa158015610504573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105289190610600565b9250505090565b600061054261053d84610ac9565b610aa4565b90508281526020810184848401111561055a57600080fd5b610565848285610beb565b509392505050565b60008151905061057c81610da3565b92915050565b60008135905061059181610dba565b92915050565b600082601f8301126105a857600080fd5b81356105b884826020860161052f565b91505092915050565b6000813590506105d081610dd1565b92915050565b6000813590506105e581610de8565b92915050565b6000815190506105fa81610de8565b92915050565b60006020828403121561061257600080fd5b60006106208482850161056d565b91505092915050565b6000806000806080858703121561063f57600080fd5b600061064d87828801610582565b945050602061065e878288016105d6565b935050604085013567ffffffffffffffff81111561067b57600080fd5b61068787828801610597565b9250506060610698878288016105c1565b91505092959194509250565b6000602082840312156106b657600080fd5b60006106c4848285016105eb565b91505092915050565b6106d681610b59565b82525050565b6106e581610b65565b82525050565b60006106f682610b0f565b6107008185610b1a565b9350610710818560208601610bfa565b61071981610cee565b840191505092915050565b6000815461073181610c2d565b61073b8186610b1a565b9450600182166000811461075657600181146107685761079b565b60ff198316865260208601935061079b565b61077185610afa565b60005b8381101561079357815481890152600182019150602081019050610774565b808801955050505b50505092915050565b600081546107b181610c2d565b6107bb8186610b2b565b945060018216600081146107d657600181146107e75761081a565b60ff1983168652818601935061081a565b6107f085610afa565b60005b83811015610812578154818901526001820191506020810190506107f3565b838801955050505b50505092915050565b61082c81610ba3565b82525050565b61083b81610bc7565b82525050565b61084a81610bd9565b82525050565b600061085d601483610b36565b915061086882610cff565b602082019050919050565b7f4f7074696d69737469634f7261636c6500000000000000000000000000000000815250565b60006108a6600e83610b36565b91506108b182610d28565b602082019050919050565b60006108c9601383610b36565b91506108d482610d51565b602082019050919050565b60006108ec600f83610b36565b91506108f782610d7a565b602082019050919050565b61090b81610b99565b82525050565b600061091d82846107a4565b915081905092915050565b600060208201905061093d60008301846106cd565b92915050565b600060a08201905061095860008301886106dc565b6109656020830187610902565b81810360408301526109778186610724565b90506109866060830185610823565b6109936080830184610832565b9695505050505050565b60006080820190506109b260008301876106dc565b6109bf6020830186610902565b81810360408301526109d18185610724565b90506109e06060830184610841565b95945050505050565b60006020820190508181036000830152610a0381846106eb565b905092915050565b60006020820190508181036000830152610a2481610850565b9050919050565b6000602082019050610a3f60008301610873565b919050565b60006020820190508181036000830152610a5d81610899565b9050919050565b60006020820190508181036000830152610a7d816108bc565b9050919050565b60006020820190508181036000830152610a9d816108df565b9050919050565b6000610aae610abf565b9050610aba8282610c5f565b919050565b6000604051905090565b600067ffffffffffffffff821115610ae457610ae3610cbf565b5b610aed82610cee565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610b5282610b79565b9050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610bae82610bb5565b9050919050565b6000610bc082610b79565b9050919050565b6000610bd282610b99565b9050919050565b6000610be482610b99565b9050919050565b82818337600083830152505050565b60005b83811015610c18578082015181840152602081019050610bfd565b83811115610c27576000848401525b50505050565b60006002820490506001821680610c4557607f821691505b60208210811415610c5957610c58610c90565b5b50919050565b610c6882610cee565b810181811067ffffffffffffffff82111715610c8757610c86610cbf565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f646966666572656e742074696d657374616d7073000000000000000000000000600082015250565b7f6e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b7f73616d6520616e63696c6c617279206461746100000000000000000000000000600082015250565b7f73616d65206964656e7469666965720000000000000000000000000000000000600082015250565b610dac81610b47565b8114610db757600080fd5b50565b610dc381610b65565b8114610dce57600080fd5b50565b610dda81610b6f565b8114610de557600080fd5b50565b610df181610b99565b8114610dfc57600080fd5b5056fea2646970667358221220e719f5255adbc83b0429d4a9ccedeca59a9d8fed5626604486c88b6717fa3d3064736f6c63430008040033713a7469746c653a20486176652074686520736e617073686f7420766f746520636f6e7461696e696e67205b524f41444d41505f4143435045435445445d20636f6d706c657465642077697468206d6f7265207468616e2035302070657263656e7461676530783731336137343639373436633635336132303438363137363635323037343638363532303733366536313730373336383666373432303736366637343635323036333666366537343631363936653639366536373230356235323466343134343464343135303566343134333433353034353433353434353434356432303633366636643730366336353734363536343230373736393734363832303664366637323635323037343638363136653230333533303230373036353732363336353665373436313637363568747470733a2f2f64656d6f2e736e617073686f742e6f72672f232f6465766465766465762e657468";

type GovernanceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernanceOracle__factory extends ContractFactory {
  constructor(...args: GovernanceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GovernanceOracle";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GovernanceOracle> {
    return super.deploy(overrides || {}) as Promise<GovernanceOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GovernanceOracle {
    return super.attach(address) as GovernanceOracle;
  }
  connect(signer: Signer): GovernanceOracle__factory {
    return super.connect(signer) as GovernanceOracle__factory;
  }
  static readonly contractName: "GovernanceOracle";
  public readonly contractName: "GovernanceOracle";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceOracleInterface {
    return new utils.Interface(_abi) as GovernanceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernanceOracle {
    return new Contract(address, _abi, signerOrProvider) as GovernanceOracle;
  }
}
