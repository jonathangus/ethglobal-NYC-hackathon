/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GovernanceOracle,
  GovernanceOracleInterface,
} from "../GovernanceOracle";

const _abi = [
  {
    inputs: [],
    name: "ancillaryData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callbackError",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_ancillaryData",
        type: "bytes",
      },
      {
        internalType: "int256",
        name: "price",
        type: "int256",
      },
    ],
    name: "priceSettled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestGovernanceCheck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260008060006101000a81548160ff02191690831515021790555060008060016101000a81548160ff0219169083151502179055506040518060a00160405280606581526020016200123460659139600190805190602001906200006992919062000167565b506040518060600160405280604081526020016200129960409139600290805190602001906200009b92919062000167565b5060016002604051602001620000b392919062000333565b60405160208183030381529060405260039080519060200190620000d9929190620001f8565b507f5945535f4f525f4e4f5f5155455259000000000000000000000000000000000060045573bf7a7169562078c96f0ec1a8afd6ae50f12e5a99600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200016057600080fd5b50620003e0565b82805462000175906200037b565b90600052602060002090601f016020900481019282620001995760008555620001e5565b82601f10620001b457805160ff1916838001178555620001e5565b82800160010185558215620001e5579182015b82811115620001e4578251825591602001919060010190620001c7565b5b509050620001f4919062000289565b5090565b82805462000206906200037b565b90600052602060002090601f0160209004810192826200022a576000855562000276565b82601f106200024557805160ff191683800117855562000276565b8280016001018555821562000276579182015b828111156200027557825182559160200191906001019062000258565b5b50905062000285919062000289565b5090565b5b80821115620002a45760008160009055506001016200028a565b5090565b60008154620002b7816200037b565b620002c3818662000370565b94506001821660008114620002e15760018114620002f3576200032a565b60ff198316865281860193506200032a565b620002fe856200035b565b60005b83811015620003225781548189015260018201915060208101905062000301565b838801955050505b50505092915050565b6000620003418285620002a8565b91506200034f8284620002a8565b91508190509392505050565b60008190508160005260206000209050919050565b600081905092915050565b600060028204905060018216806200039457607f821691505b60208210811415620003ab57620003aa620003b1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b610e4480620003f06000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806304cc1fd51461005c5780636559905714610078578063661a4f5314610096578063e3389f09146100b4578063f2f1f22f146100be575b600080fd5b61007660048036038101906100719190610638565b6100dc565b005b61008061028f565b60405161008d91906109f8565b60405180910390f35b61009e61031d565b6040516100ab9190610937565b60405180910390f35b6100bc610330565b005b6100c6610471565b6040516100d39190610937565b60405180910390f35b60006100e6610482565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d90610a53565b60405180910390fd5b600654841461019a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019190610a1a565b60405180910390fd5b60045485146101de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d590610a93565b60405180910390fd5b828051906020012060036040516101f59190610920565b60405180910390201461023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610a73565b60405180910390fd5b670de0b6b3a764000082141561026c5760016000806101000a81548160ff021916908315150217905550610288565b6001600060016101000a81548160ff0219169083151502179055505b5050505050565b6003805461029c90610c3c565b80601f01602080910402602001604051908101604052809291908181526020018280546102c890610c3c565b80156103155780601f106102ea57610100808354040283529160200191610315565b820191906000526020600020905b8154815290600101906020018083116102f857829003601f168201915b505050505081565b600060019054906101000a900460ff1681565b600061033a610482565b9050600073bf7a7169562078c96f0ec1a8afd6ae50f12e5a9990508173ffffffffffffffffffffffffffffffffffffffff166311df92f1600454600654600385671bc16d674ec800006040518663ffffffff1660e01b81526004016103a3959493929190610952565b602060405180830381600087803b1580156103bd57600080fd5b505af11580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f591906106b3565b508173ffffffffffffffffffffffffffffffffffffffff1663473c45fe600454600654600360b46040518563ffffffff1660e01b815260040161043b94939291906109ac565b600060405180830381600087803b15801561045557600080fd5b505af1158015610469573d6000803e3d6000fd5b505050505050565b60008054906101000a900460ff1681565b600061048c610491565b905090565b60008073ed0169a88d267063184b0853baaaae66c3c154b2905060008190508073ffffffffffffffffffffffffffffffffffffffff1663aafd5e406040518163ffffffff1660e01b81526004016104e790610a3a565b60206040518083038186803b1580156104ff57600080fd5b505afa158015610513573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610537919061060f565b9250505090565b600061055161054c84610ad8565b610ab3565b90508281526020810184848401111561056957600080fd5b610574848285610bfa565b509392505050565b60008151905061058b81610db2565b92915050565b6000813590506105a081610dc9565b92915050565b600082601f8301126105b757600080fd5b81356105c784826020860161053e565b91505092915050565b6000813590506105df81610de0565b92915050565b6000813590506105f481610df7565b92915050565b60008151905061060981610df7565b92915050565b60006020828403121561062157600080fd5b600061062f8482850161057c565b91505092915050565b6000806000806080858703121561064e57600080fd5b600061065c87828801610591565b945050602061066d878288016105e5565b935050604085013567ffffffffffffffff81111561068a57600080fd5b610696878288016105a6565b92505060606106a7878288016105d0565b91505092959194509250565b6000602082840312156106c557600080fd5b60006106d3848285016105fa565b91505092915050565b6106e581610b68565b82525050565b6106f481610b74565b82525050565b600061070582610b1e565b61070f8185610b29565b935061071f818560208601610c09565b61072881610cfd565b840191505092915050565b6000815461074081610c3c565b61074a8186610b29565b945060018216600081146107655760018114610777576107aa565b60ff19831686526020860193506107aa565b61078085610b09565b60005b838110156107a257815481890152600182019150602081019050610783565b808801955050505b50505092915050565b600081546107c081610c3c565b6107ca8186610b3a565b945060018216600081146107e557600181146107f657610829565b60ff19831686528186019350610829565b6107ff85610b09565b60005b8381101561082157815481890152600182019150602081019050610802565b838801955050505b50505092915050565b61083b81610bb2565b82525050565b61084a81610bd6565b82525050565b61085981610be8565b82525050565b600061086c601483610b45565b915061087782610d0e565b602082019050919050565b7f4f7074696d69737469634f7261636c6500000000000000000000000000000000815250565b60006108b5600e83610b45565b91506108c082610d37565b602082019050919050565b60006108d8601383610b45565b91506108e382610d60565b602082019050919050565b60006108fb600f83610b45565b915061090682610d89565b602082019050919050565b61091a81610ba8565b82525050565b600061092c82846107b3565b915081905092915050565b600060208201905061094c60008301846106dc565b92915050565b600060a08201905061096760008301886106eb565b6109746020830187610911565b81810360408301526109868186610733565b90506109956060830185610832565b6109a26080830184610850565b9695505050505050565b60006080820190506109c160008301876106eb565b6109ce6020830186610911565b81810360408301526109e08185610733565b90506109ef6060830184610841565b95945050505050565b60006020820190508181036000830152610a1281846106fa565b905092915050565b60006020820190508181036000830152610a338161085f565b9050919050565b6000602082019050610a4e60008301610882565b919050565b60006020820190508181036000830152610a6c816108a8565b9050919050565b60006020820190508181036000830152610a8c816108cb565b9050919050565b60006020820190508181036000830152610aac816108ee565b9050919050565b6000610abd610ace565b9050610ac98282610c6e565b919050565b6000604051905090565b600067ffffffffffffffff821115610af357610af2610cce565b5b610afc82610cfd565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610b6182610b88565b9050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610bbd82610bc4565b9050919050565b6000610bcf82610b88565b9050919050565b6000610be182610ba8565b9050919050565b6000610bf382610ba8565b9050919050565b82818337600083830152505050565b60005b83811015610c27578082015181840152602081019050610c0c565b83811115610c36576000848401525b50505050565b60006002820490506001821680610c5457607f821691505b60208210811415610c6857610c67610c9f565b5b50919050565b610c7782610cfd565b810181811067ffffffffffffffff82111715610c9657610c95610cce565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f646966666572656e742074696d657374616d7073000000000000000000000000600082015250565b7f6e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b7f73616d6520616e63696c6c617279206461746100000000000000000000000000600082015250565b7f73616d65206964656e7469666965720000000000000000000000000000000000600082015250565b610dbb81610b56565b8114610dc657600080fd5b50565b610dd281610b74565b8114610ddd57600080fd5b50565b610de981610b7e565b8114610df457600080fd5b50565b610e0081610ba8565b8114610e0b57600080fd5b5056fea2646970667358221220de50601e22a7dd6057f4df6d2b2c7d29f0e5fdc22c67bb03ed7989dde90c5af864736f6c63430008040033713a7469746c653a20486176652074686520736e617073686f7420766f746520636f6e7461696e696e67205b524f41444d41505f4143435045435445445d20636f6d706c657465642077697468206d6f7265207468616e2035302070657263656e74616765206f662074686520766f74657320617265205945533f2c68747470733a2f2f64656d6f2e736e617073686f742e6f72672f232f6465766465766465762e657468";

type GovernanceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernanceOracle__factory extends ContractFactory {
  constructor(...args: GovernanceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GovernanceOracle";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GovernanceOracle> {
    return super.deploy(overrides || {}) as Promise<GovernanceOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GovernanceOracle {
    return super.attach(address) as GovernanceOracle;
  }
  connect(signer: Signer): GovernanceOracle__factory {
    return super.connect(signer) as GovernanceOracle__factory;
  }
  static readonly contractName: "GovernanceOracle";
  public readonly contractName: "GovernanceOracle";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceOracleInterface {
    return new utils.Interface(_abi) as GovernanceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernanceOracle {
    return new Contract(address, _abi, signerOrProvider) as GovernanceOracle;
  }
}
