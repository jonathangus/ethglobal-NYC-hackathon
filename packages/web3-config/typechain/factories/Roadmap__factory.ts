/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Roadmap, RoadmapInterface } from "../Roadmap";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reservedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "StepCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "stepId",
        type: "uint256",
      },
    ],
    name: "StepExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "abort",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "claimAbort",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stepId",
        type: "uint256",
      },
    ],
    name: "executeStep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reverted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "steps",
    outputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260008060146101000a81548160ff0219169083151502179055503480156200002b57600080fd5b506040516200158a3803806200158a833981810160405281019062000051919062000162565b62000071620000656200007f60201b60201c565b6200008760201b60201c565b8060018190555050620001b2565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200015c8162000198565b92915050565b6000602082840312156200017557600080fd5b600062000185848285016200014b565b91505092915050565b6000819050919050565b620001a3816200018e565b8114620001af57600080fd5b50565b6113c880620001c26000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637217e0b9116100665780637217e0b9146100d2578063867fc17a146101045780638da5cb5b14610120578063bc0af82a1461013e578063f2fde38b1461015c57610093565b806324600fc31461009857806335a063b4146100a257806352aa0507146100ac578063715018a6146100c8575b600080fd5b6100a0610178565b005b6100aa6102ff565b005b6100c660048036038101906100c19190610be5565b610398565b005b6100d06104cb565b005b6100ec60048036038101906100e79190610c26565b610553565b6040516100fb93929190610e7d565b60405180910390f35b61011e60048036038101906101199190610c26565b610622565b005b6101286108fc565b6040516101359190610e10565b60405180910390f35b610146610925565b6040516101539190610e62565b60405180910390f35b61017660048036038101906101719190610bbc565b610938565b005b610180610a30565b73ffffffffffffffffffffffffffffffffffffffff1661019e6108fc565b73ffffffffffffffffffffffffffffffffffffffff16146101f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101eb90610f3b565b60405180910390fd5b60005b6002805490508110156102af576002818154811061023e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160020160009054906101000a900460ff1661029c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029390610f1b565b60405180910390fd5b80806102a790611157565b9150506101f7565b5060004790503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102fb573d6000803e3d6000fd5b5050565b610307610a30565b73ffffffffffffffffffffffffffffffffffffffff166103256108fc565b73ffffffffffffffffffffffffffffffffffffffff161461037b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037290610f3b565b60405180910390fd5b6001600060146101000a81548160ff021916908315150217905550565b600060149054906101000a900460ff166103e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103de90610edb565b60405180910390fd5b6000805b82518110156104c6573073ffffffffffffffffffffffffffffffffffffffff166342842e0e333086858151811061044b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b815260040161047193929190610e2b565b600060405180830381600087803b15801561048b57600080fd5b505af115801561049f573d6000803e3d6000fd5b50505050612710826104b19190611019565b915080806104be90611157565b9150506103eb565b505050565b6104d3610a30565b73ffffffffffffffffffffffffffffffffffffffff166104f16108fc565b73ffffffffffffffffffffffffffffffffffffffff1614610547576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053e90610f3b565b60405180910390fd5b6105516000610a38565b565b6002818154811061056357600080fd5b906000526020600020906003020160009150905080600001549080600101805461058c906110f4565b80601f01602080910402602001604051908101604052809291908181526020018280546105b8906110f4565b80156106055780601f106105da57610100808354040283529160200191610605565b820191906000526020600020905b8154815290600101906020018083116105e857829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b60006002828154811061065e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160405180606001604052908160008201548152602001600182018054610691906110f4565b80601f01602080910402602001604051908101604052809291908181526020018280546106bd906110f4565b801561070a5780601f106106df5761010080835404028352916020019161070a565b820191906000526020600020905b8154815290600101906020018083116106ed57829003601f168201915b505050505081526020016002820160009054906101000a900460ff16151515158152505090506000803073ffffffffffffffffffffffffffffffffffffffff16836000015160405160200161075f9190610dde565b60405160208183030381529060405260405161077b9190610df9565b6000604051808303816000865af19150503d80600081146107b8576040519150601f19603f3d011682016040523d82523d6000602084013e6107bd565b606091505b5091509150600081516020830151915050826108145782610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080a90610f5b565b60405180910390fd5b5b8061085a5780610859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085090610ebb565b60405180910390fd5b5b600160028681548110610896577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160020160006101000a81548160ff0219169083151502179055507f7d716790d01a64421d121f2b247366a43719c87528485b9900995183b635fe8a856040516108ed9190610f7b565b60405180910390a15050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060149054906101000a900460ff1681565b610940610a30565b73ffffffffffffffffffffffffffffffffffffffff1661095e6108fc565b73ffffffffffffffffffffffffffffffffffffffff16146109b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ab90610f3b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1b90610efb565b60405180910390fd5b610a2d81610a38565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610b0f610b0a84610fbb565b610f96565b90508083825260208201905082856020860282011115610b2e57600080fd5b60005b85811015610b5e5781610b448882610ba7565b845260208401935060208301925050600181019050610b31565b5050509392505050565b600081359050610b7781611364565b92915050565b600082601f830112610b8e57600080fd5b8135610b9e848260208601610afc565b91505092915050565b600081359050610bb68161137b565b92915050565b600060208284031215610bce57600080fd5b6000610bdc84828501610b68565b91505092915050565b600060208284031215610bf757600080fd5b600082013567ffffffffffffffff811115610c1157600080fd5b610c1d84828501610b7d565b91505092915050565b600060208284031215610c3857600080fd5b6000610c4684828501610ba7565b91505092915050565b610c588161106f565b82525050565b610c6781611081565b82525050565b610c768161108d565b82525050565b610c8d610c888261108d565b6111a0565b82525050565b6000610c9e82610fe7565b610ca88185610ffd565b9350610cb88185602086016110c1565b80840191505092915050565b6000610ccf82610ff2565b610cd98185611008565b9350610ce98185602086016110c1565b610cf281611237565b840191505092915050565b6000610d0a601583611008565b9150610d1582611248565b602082019050919050565b6000610d2d601383611008565b9150610d3882611271565b602082019050919050565b6000610d50602683611008565b9150610d5b8261129a565b604082019050919050565b6000610d73600d83611008565b9150610d7e826112e9565b602082019050919050565b6000610d96602083611008565b9150610da182611312565b602082019050919050565b6000610db9601383611008565b9150610dc48261133b565b602082019050919050565b610dd8816110b7565b82525050565b6000610dea8284610c7c565b60208201915081905092915050565b6000610e058284610c93565b915081905092915050565b6000602082019050610e256000830184610c4f565b92915050565b6000606082019050610e406000830186610c4f565b610e4d6020830185610c4f565b610e5a6040830184610dcf565b949350505050565b6000602082019050610e776000830184610c5e565b92915050565b6000606082019050610e926000830186610c6d565b8181036020830152610ea48185610cc4565b9050610eb36040830184610c5e565b949350505050565b60006020820190508181036000830152610ed481610cfd565b9050919050565b60006020820190508181036000830152610ef481610d20565b9050919050565b60006020820190508181036000830152610f1481610d43565b9050919050565b60006020820190508181036000830152610f3481610d66565b9050919050565b60006020820190508181036000830152610f5481610d89565b9050919050565b60006020820190508181036000830152610f7481610dac565b9050919050565b6000602082019050610f906000830184610dcf565b92915050565b6000610fa0610fb1565b9050610fac8282611126565b919050565b6000604051905090565b600067ffffffffffffffff821115610fd657610fd5611208565b5b602082029050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611024826110b7565b915061102f836110b7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611064576110636111aa565b5b828201905092915050565b600061107a82611097565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156110df5780820151818401526020810190506110c4565b838111156110ee576000848401525b50505050565b6000600282049050600182168061110c57607f821691505b602082108114156111205761111f6111d9565b5b50919050565b61112f82611237565b810181811067ffffffffffffffff8211171561114e5761114d611208565b5b80604052505050565b6000611162826110b7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611195576111946111aa565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f726573756c74206e6f74207375636365737366756c0000000000000000000000600082015250565b7f5265766572746564206e6f742061637469766500000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420636f6d706c6574656400000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f63616c6c206e6f74207375636365737366756c00000000000000000000000000600082015250565b61136d8161106f565b811461137857600080fd5b50565b611384816110b7565b811461138f57600080fd5b5056fea2646970667358221220841475046d2a3721db90a98199db83c8193f6de1c955ce3b6ad4211ef21d4fdf64736f6c63430008040033";

type RoadmapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoadmapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Roadmap__factory extends ContractFactory {
  constructor(...args: RoadmapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Roadmap";
  }

  deploy(
    _reservedAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Roadmap> {
    return super.deploy(_reservedAmount, overrides || {}) as Promise<Roadmap>;
  }
  getDeployTransaction(
    _reservedAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_reservedAmount, overrides || {});
  }
  attach(address: string): Roadmap {
    return super.attach(address) as Roadmap;
  }
  connect(signer: Signer): Roadmap__factory {
    return super.connect(signer) as Roadmap__factory;
  }
  static readonly contractName: "Roadmap";
  public readonly contractName: "Roadmap";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoadmapInterface {
    return new utils.Interface(_abi) as RoadmapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Roadmap {
    return new Contract(address, _abi, signerOrProvider) as Roadmap;
  }
}
