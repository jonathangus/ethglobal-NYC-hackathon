/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Roadmap, RoadmapInterface } from "../Roadmap";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reservedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_mintPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "StepCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "stepId",
        type: "uint256",
      },
    ],
    name: "StepExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "abort",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "claimRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "claimableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stepId",
        type: "uint256",
      },
    ],
    name: "executeStep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reverted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stepCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "steps",
    outputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stepsCompleted",
    outputs: [
      {
        internalType: "uint256",
        name: "completed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260008060146101000a81548160ff0219169083151502179055503480156200002b57600080fd5b50604051620021233803806200212383398181016040528101906200005191906200016a565b62000071620000656200008760201b60201c565b6200008f60201b60201c565b81600181905550806002819055505050620001cf565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200016481620001b5565b92915050565b600080604083850312156200017e57600080fd5b60006200018e8582860162000153565b9250506020620001a18582860162000153565b9150509250929050565b6000819050919050565b620001c081620001ab565b8114620001cc57600080fd5b50565b611f4480620001df6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063867fc17a11610071578063867fc17a146101575780638da5cb5b14610173578063b64c7a7314610191578063bc0af82a146101af578063f2fde38b146101cd578063f54a6f83146101e9576100b4565b806324600fc3146100b957806335a063b4146100c3578063415deffa146100cd5780634bdfc736146100eb578063715018a61461011b5780637217e0b914610125575b600080fd5b6100c1610205565b005b6100cb61038c565b005b6100d5610425565b6040516100e2919061198e565b60405180910390f35b610105600480360381019061010091906114b4565b610432565b604051610112919061198e565b60405180910390f35b610123610788565b005b61013f600480360381019061013a91906114f5565b610810565b60405161014e939291906117de565b60405180910390f35b610171600480360381019061016c91906114f5565b6108df565b005b61017b610bf2565b6040516101889190611771565b60405180910390f35b610199610c1b565b6040516101a6919061198e565b60405180910390f35b6101b7610d70565b6040516101c491906117c3565b60405180910390f35b6101e760048036038101906101e29190611462565b610d83565b005b61020360048036038101906101fe91906114b4565b610e7b565b005b61020d61114e565b73ffffffffffffffffffffffffffffffffffffffff1661022b610bf2565b73ffffffffffffffffffffffffffffffffffffffff1614610281576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102789061194e565b60405180910390fd5b60005b60048054905081101561033c57600481815481106102cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160020160009054906101000a900460ff16610329576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103209061192e565b60405180910390fd5b808061033490611c29565b915050610284565b5060004790503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610388573d6000803e3d6000fd5b5050565b61039461114e565b73ffffffffffffffffffffffffffffffffffffffff166103b2610bf2565b73ffffffffffffffffffffffffffffffffffffffff1614610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff9061194e565b60405180910390fd5b6001600060146101000a81548160ff021916908315150217905550565b6000600480549050905090565b6000806000905060003090506000610448610c1b565b905060006002548373ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561049557600080fd5b505afa1580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd919061151e565b6104d79190611ab3565b905060015481101561052e576105216040518060400160405280600881526020017f72657475726e2031000000000000000000000000000000000000000000000000815250611156565b6000945050505050610783565b60006001548261053e9190611b0d565b905060004790508181101561059a5761058b6040518060400160405280600881526020017f72657475726e2032000000000000000000000000000000000000000000000000815250611156565b60009650505050505050610783565b6105de6040518060400160405280600c81526020017f7374657073206c656e67746800000000000000000000000000000000000000008152506004805490506111ef565b61061d6040518060400160405280601081526020017f636f6d706c65746564206c656e67746800000000000000000000000000000000815250856111ef565b6000846103e86004805490506106339190611ab3565b61063d9190611a82565b905061067e6040518060400160405280601381526020017f636f6d706c6574656450657263656e7461676500000000000000000000000000815250826111ef565b60008673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106c657600080fd5b505afa1580156106da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fe919061151e565b846107099190611a82565b905060005b8a51811015610776576003600082815260200190815260200160002060009054906101000a900460ff16610763576103e8838361074b9190611ab3565b6107559190611a82565b896107609190611a2c565b98505b808061076e90611c29565b91505061070e565b5087985050505050505050505b919050565b61079061114e565b73ffffffffffffffffffffffffffffffffffffffff166107ae610bf2565b73ffffffffffffffffffffffffffffffffffffffff1614610804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fb9061194e565b60405180910390fd5b61080e600061128b565b565b6004818154811061082057600080fd5b906000526020600020906003020160009150905080600001549080600101805461084990611bc6565b80601f016020809104026020016040519081016040528092919081815260200182805461087590611bc6565b80156108c25780601f10610897576101008083540402835291602001916108c2565b820191906000526020600020905b8154815290600101906020018083116108a557829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b60006004828154811061091b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600302016040518060600160405290816000820154815260200160018201805461094e90611bc6565b80601f016020809104026020016040519081016040528092919081815260200182805461097a90611bc6565b80156109c75780601f1061099c576101008083540402835291602001916109c7565b820191906000526020600020905b8154815290600101906020018083116109aa57829003601f168201915b505050505081526020016002820160009054906101000a900460ff1615151515815250509050806040015115610a32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a29906118ae565b60405180910390fd5b6000803073ffffffffffffffffffffffffffffffffffffffff168360000151604051602001610a61919061173f565b604051602081830303815290604052604051610a7d919061175a565b6000604051808303816000865af19150503d8060008114610aba576040519150601f19603f3d011682016040523d82523d6000602084013e610abf565b606091505b509150915060008151602083015191505082610b10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b079061196e565b60405180910390fd5b80610b50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b479061186e565b60405180910390fd5b600160048681548110610b8c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160020160006101000a81548160ff0219169083151502179055507f7d716790d01a64421d121f2b247366a43719c87528485b9900995183b635fe8a85604051610be3919061198e565b60405180910390a15050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600090505b600480549050811015610d6c57600060048281548110610c6c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160405180606001604052908160008201548152602001600182018054610c9f90611bc6565b80601f0160208091040260200160405190810160405280929190818152602001828054610ccb90611bc6565b8015610d185780601f10610ced57610100808354040283529160200191610d18565b820191906000526020600020905b815481529060010190602001808311610cfb57829003601f168201915b505050505081526020016002820160009054906101000a900460ff1615151515815250509050806040015115610d5857600183610d559190611a2c565b92505b508080610d6490611c29565b915050610c23565b5090565b600060149054906101000a900460ff1681565b610d8b61114e565b73ffffffffffffffffffffffffffffffffffffffff16610da9610bf2565b73ffffffffffffffffffffffffffffffffffffffff1614610dff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df69061194e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e66906118ce565b60405180910390fd5b610e788161128b565b50565b600060149054906101000a900460ff16610eca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec19061188e565b60405180910390fd5b600030905060005b82518110156110f4573373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610f2b919061198e565b60206040518083038186803b158015610f4357600080fd5b505afa158015610f57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7b919061148b565b73ffffffffffffffffffffffffffffffffffffffff1614610fd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc8906118ee565b60405180910390fd5b6003600082815260200190815260200160002060009054906101000a900460ff1615611032576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110299061190e565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330868581518110611089577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b81526004016110af9392919061178c565b600060405180830381600087803b1580156110c957600080fd5b505af11580156110dd573d6000803e3d6000fd5b5050505080806110ec90611c29565b915050610ed2565b50600061110083610432565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611148573d6000803e3d6000fd5b50505050565b600033905090565b6111ec8160405160240161116a919061181c565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061134f565b50565b611287828260405160240161120592919061183e565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061134f565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600061138b611386846119ce565b6119a9565b905080838252602082019050828560208602820111156113aa57600080fd5b60005b858110156113da57816113c08882611438565b8452602084019350602083019250506001810190506113ad565b5050509392505050565b6000813590506113f381611ee0565b92915050565b60008151905061140881611ee0565b92915050565b600082601f83011261141f57600080fd5b813561142f848260208601611378565b91505092915050565b60008135905061144781611ef7565b92915050565b60008151905061145c81611ef7565b92915050565b60006020828403121561147457600080fd5b6000611482848285016113e4565b91505092915050565b60006020828403121561149d57600080fd5b60006114ab848285016113f9565b91505092915050565b6000602082840312156114c657600080fd5b600082013567ffffffffffffffff8111156114e057600080fd5b6114ec8482850161140e565b91505092915050565b60006020828403121561150757600080fd5b600061151584828501611438565b91505092915050565b60006020828403121561153057600080fd5b600061153e8482850161144d565b91505092915050565b61155081611b41565b82525050565b61155f81611b53565b82525050565b61156e81611b5f565b82525050565b61158561158082611b5f565b611c72565b82525050565b6000611596826119fa565b6115a08185611a10565b93506115b0818560208601611b93565b80840191505092915050565b60006115c782611a05565b6115d18185611a1b565b93506115e1818560208601611b93565b6115ea81611d38565b840191505092915050565b6000611602601583611a1b565b915061160d82611d49565b602082019050919050565b6000611625601383611a1b565b915061163082611d72565b602082019050919050565b6000611648601183611a1b565b915061165382611d9b565b602082019050919050565b600061166b602683611a1b565b915061167682611dc4565b604082019050919050565b600061168e600b83611a1b565b915061169982611e13565b602082019050919050565b60006116b1601983611a1b565b91506116bc82611e3c565b602082019050919050565b60006116d4600d83611a1b565b91506116df82611e65565b602082019050919050565b60006116f7602083611a1b565b915061170282611e8e565b602082019050919050565b600061171a601383611a1b565b915061172582611eb7565b602082019050919050565b61173981611b89565b82525050565b600061174b8284611574565b60208201915081905092915050565b6000611766828461158b565b915081905092915050565b60006020820190506117866000830184611547565b92915050565b60006060820190506117a16000830186611547565b6117ae6020830185611547565b6117bb6040830184611730565b949350505050565b60006020820190506117d86000830184611556565b92915050565b60006060820190506117f36000830186611565565b818103602083015261180581856115bc565b90506118146040830184611556565b949350505050565b6000602082019050818103600083015261183681846115bc565b905092915050565b6000604082019050818103600083015261185881856115bc565b90506118676020830184611730565b9392505050565b60006020820190508181036000830152611887816115f5565b9050919050565b600060208201905081810360008301526118a781611618565b9050919050565b600060208201905081810360008301526118c78161163b565b9050919050565b600060208201905081810360008301526118e78161165e565b9050919050565b6000602082019050818103600083015261190781611681565b9050919050565b60006020820190508181036000830152611927816116a4565b9050919050565b60006020820190508181036000830152611947816116c7565b9050919050565b60006020820190508181036000830152611967816116ea565b9050919050565b600060208201905081810360008301526119878161170d565b9050919050565b60006020820190506119a36000830184611730565b92915050565b60006119b36119c4565b90506119bf8282611bf8565b919050565b6000604051905090565b600067ffffffffffffffff8211156119e9576119e8611d09565b5b602082029050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611a3782611b89565b9150611a4283611b89565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a7757611a76611c7c565b5b828201905092915050565b6000611a8d82611b89565b9150611a9883611b89565b925082611aa857611aa7611cab565b5b828204905092915050565b6000611abe82611b89565b9150611ac983611b89565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b0257611b01611c7c565b5b828202905092915050565b6000611b1882611b89565b9150611b2383611b89565b925082821015611b3657611b35611c7c565b5b828203905092915050565b6000611b4c82611b69565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015611bb1578082015181840152602081019050611b96565b83811115611bc0576000848401525b50505050565b60006002820490506001821680611bde57607f821691505b60208210811415611bf257611bf1611cda565b5b50919050565b611c0182611d38565b810181811067ffffffffffffffff82111715611c2057611c1f611d09565b5b80604052505050565b6000611c3482611b89565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611c6757611c66611c7c565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f726573756c74206e6f74207375636365737366756c0000000000000000000000600082015250565b7f5265766572746564206e6f742061637469766500000000000000000000000000600082015250565b7f616c726561647920636f6d706c65746564000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f57726f6e67206f776e6572000000000000000000000000000000000000000000600082015250565b7f416c726561647920636c61696d656420666f7220746f6b656e00000000000000600082015250565b7f4e6f7420636f6d706c6574656400000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f63616c6c206e6f74207375636365737366756c00000000000000000000000000600082015250565b611ee981611b41565b8114611ef457600080fd5b50565b611f0081611b89565b8114611f0b57600080fd5b5056fea2646970667358221220db44e4b06c2d4c0133051077e5de860cb8cf61eb4a69262f66831a4e51fb43f464736f6c63430008040033";

type RoadmapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoadmapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Roadmap__factory extends ContractFactory {
  constructor(...args: RoadmapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Roadmap";
  }

  deploy(
    _reservedAmount: BigNumberish,
    _mintPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Roadmap> {
    return super.deploy(
      _reservedAmount,
      _mintPrice,
      overrides || {}
    ) as Promise<Roadmap>;
  }
  getDeployTransaction(
    _reservedAmount: BigNumberish,
    _mintPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _reservedAmount,
      _mintPrice,
      overrides || {}
    );
  }
  attach(address: string): Roadmap {
    return super.attach(address) as Roadmap;
  }
  connect(signer: Signer): Roadmap__factory {
    return super.connect(signer) as Roadmap__factory;
  }
  static readonly contractName: "Roadmap";
  public readonly contractName: "Roadmap";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoadmapInterface {
    return new utils.Interface(_abi) as RoadmapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Roadmap {
    return new Contract(address, _abi, signerOrProvider) as Roadmap;
  }
}
