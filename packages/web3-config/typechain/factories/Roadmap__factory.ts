/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Roadmap, RoadmapInterface } from "../Roadmap";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reservedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum Roadmap.StepTypes",
        name: "stepType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "data",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "StepCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "stepId",
        type: "uint256",
      },
    ],
    name: "StepExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "abort",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "claimAbort",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stepId",
        type: "uint256",
      },
    ],
    name: "executeStep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reverted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "steps",
    outputs: [
      {
        internalType: "enum Roadmap.StepTypes",
        name: "stepType",
        type: "uint8",
      },
      {
        internalType: "bytes4",
        name: "data",
        type: "bytes4",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260008060146101000a81548160ff0219169083151502179055503480156200002b57600080fd5b506040516200131738038062001317833981810160405281019062000051919062000162565b62000071620000656200007f60201b60201c565b6200008760201b60201c565b8060018190555050620001b2565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200015c8162000198565b92915050565b6000602082840312156200017557600080fd5b600062000185848285016200014b565b91505092915050565b6000819050919050565b620001a3816200018e565b8114620001af57600080fd5b50565b61115580620001c26000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637217e0b9116100665780637217e0b9146100d2578063867fc17a146101055780638da5cb5b14610121578063bc0af82a1461013f578063f2fde38b1461015d57610093565b806324600fc31461009857806335a063b4146100a257806352aa0507146100ac578063715018a6146100c8575b600080fd5b6100a0610179565b005b6100aa610300565b005b6100c660048036038101906100c19190610aca565b610399565b005b6100d06103eb565b005b6100ec60048036038101906100e79190610b0b565b610473565b6040516100fc9493929190610c7a565b60405180910390f35b61011f600480360381019061011a9190610b0b565b610562565b005b6101296107e1565b6040516101369190610c44565b60405180910390f35b61014761080a565b6040516101549190610c5f565b60405180910390f35b61017760048036038101906101729190610aa1565b61081d565b005b610181610915565b73ffffffffffffffffffffffffffffffffffffffff1661019f6107e1565b73ffffffffffffffffffffffffffffffffffffffff16146101f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ec90610d26565b60405180910390fd5b60005b6002805490508110156102b0576002818154811061023f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160020160009054906101000a900460ff1661029d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029490610d06565b60405180910390fd5b80806102a890610efd565b9150506101f8565b5060004790503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102fc573d6000803e3d6000fd5b5050565b610308610915565b73ffffffffffffffffffffffffffffffffffffffff166103266107e1565b73ffffffffffffffffffffffffffffffffffffffff161461037c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037390610d26565b60405180910390fd5b6001600060146101000a81548160ff021916908315150217905550565b600060149054906101000a900460ff166103e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103df90610cc6565b60405180910390fd5b50565b6103f3610915565b73ffffffffffffffffffffffffffffffffffffffff166104116107e1565b73ffffffffffffffffffffffffffffffffffffffff1614610467576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045e90610d26565b60405180910390fd5b610471600061091d565b565b6002818154811061048357600080fd5b90600052602060002090600302016000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460e01b908060010180546104cc90610e9a565b80601f01602080910402602001604051908101604052809291908181526020018280546104f890610e9a565b80156105455780601f1061051a57610100808354040283529160200191610545565b820191906000526020600020905b81548152906001019060200180831161052857829003601f168201915b5050505050908060020160009054906101000a900460ff16905084565b60006002828154811061059e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600302016040518060800160405290816000820160009054906101000a900460ff166001811115610602577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600181111561063a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016000820160019054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016001820180546106a390610e9a565b80601f01602080910402602001604051908101604052809291908181526020018280546106cf90610e9a565b801561071c5780601f106106f15761010080835404028352916020019161071c565b820191906000526020600020905b8154815290600101906020018083116106ff57829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581525050905060016002838154811061077e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906003020160020160006101000a81548160ff0219169083151502179055507f7d716790d01a64421d121f2b247366a43719c87528485b9900995183b635fe8a826040516107d59190610d46565b60405180910390a15050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060149054906101000a900460ff1681565b610825610915565b73ffffffffffffffffffffffffffffffffffffffff166108436107e1565b73ffffffffffffffffffffffffffffffffffffffff1614610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089090610d26565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610909576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090090610ce6565b60405180910390fd5b6109128161091d565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006109f46109ef84610d86565b610d61565b90508083825260208201905082856020860282011115610a1357600080fd5b60005b85811015610a435781610a298882610a8c565b845260208401935060208301925050600181019050610a16565b5050509392505050565b600081359050610a5c816110f1565b92915050565b600082601f830112610a7357600080fd5b8135610a838482602086016109e1565b91505092915050565b600081359050610a9b81611108565b92915050565b600060208284031215610ab357600080fd5b6000610ac184828501610a4d565b91505092915050565b600060208284031215610adc57600080fd5b600082013567ffffffffffffffff811115610af657600080fd5b610b0284828501610a62565b91505092915050565b600060208284031215610b1d57600080fd5b6000610b2b84828501610a8c565b91505092915050565b610b3d81610dce565b82525050565b610b4c81610de0565b82525050565b610b5b81610dec565b82525050565b610b6a81610e55565b82525050565b6000610b7b82610db2565b610b858185610dbd565b9350610b95818560208601610e67565b610b9e81611002565b840191505092915050565b6000610bb6601383610dbd565b9150610bc182611013565b602082019050919050565b6000610bd9602683610dbd565b9150610be48261103c565b604082019050919050565b6000610bfc600d83610dbd565b9150610c078261108b565b602082019050919050565b6000610c1f602083610dbd565b9150610c2a826110b4565b602082019050919050565b610c3e81610e4b565b82525050565b6000602082019050610c596000830184610b34565b92915050565b6000602082019050610c746000830184610b43565b92915050565b6000608082019050610c8f6000830187610b61565b610c9c6020830186610b52565b8181036040830152610cae8185610b70565b9050610cbd6060830184610b43565b95945050505050565b60006020820190508181036000830152610cdf81610ba9565b9050919050565b60006020820190508181036000830152610cff81610bcc565b9050919050565b60006020820190508181036000830152610d1f81610bef565b9050919050565b60006020820190508181036000830152610d3f81610c12565b9050919050565b6000602082019050610d5b6000830184610c35565b92915050565b6000610d6b610d7c565b9050610d778282610ecc565b919050565b6000604051905090565b600067ffffffffffffffff821115610da157610da0610fd3565b5b602082029050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610dd982610e2b565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050610e26826110dd565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e6082610e18565b9050919050565b60005b83811015610e85578082015181840152602081019050610e6a565b83811115610e94576000848401525b50505050565b60006002820490506001821680610eb257607f821691505b60208210811415610ec657610ec5610fa4565b5b50919050565b610ed582611002565b810181811067ffffffffffffffff82111715610ef457610ef3610fd3565b5b80604052505050565b6000610f0882610e4b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f3b57610f3a610f46565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f5265766572746564206e6f742061637469766500000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420636f6d706c6574656400000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600281106110ee576110ed610f75565b5b50565b6110fa81610dce565b811461110557600080fd5b50565b61111181610e4b565b811461111c57600080fd5b5056fea264697066735822122050698a13ab9eb7cd9d138c69775c9a020c4abdc6b94aae45da357b949728d3b464736f6c63430008040033";

type RoadmapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoadmapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Roadmap__factory extends ContractFactory {
  constructor(...args: RoadmapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Roadmap";
  }

  deploy(
    _reservedAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Roadmap> {
    return super.deploy(_reservedAmount, overrides || {}) as Promise<Roadmap>;
  }
  getDeployTransaction(
    _reservedAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_reservedAmount, overrides || {});
  }
  attach(address: string): Roadmap {
    return super.attach(address) as Roadmap;
  }
  connect(signer: Signer): Roadmap__factory {
    return super.connect(signer) as Roadmap__factory;
  }
  static readonly contractName: "Roadmap";
  public readonly contractName: "Roadmap";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoadmapInterface {
    return new utils.Interface(_abi) as RoadmapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Roadmap {
    return new Contract(address, _abi, signerOrProvider) as Roadmap;
  }
}
